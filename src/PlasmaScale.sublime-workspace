{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"num",
				"number_of_populations"
			],
			[
				"_ele",
				"_electrostatic_energy_by_mode"
			],
			[
				"get",
				"get_ptr"
			],
			[
				"velo",
				"velocity_profiles"
			],
			[
				"di",
				"diagnostics"
			],
			[
				"Sc",
				"ScatterDiagnostic"
			],
			[
				"_el",
				"_electrostatic_energy_by_mode"
			],
			[
				"_max",
				"_max_mode"
			],
			[
				"_kine",
				"_kinetic_energy_by_population"
			],
			[
				"elec",
				"electrostatic_energy_by_mode"
			],
			[
				"ele",
				"electrostatic_energy"
			],
			[
				"_mom",
				"_moment_by_population"
			],
			[
				"_kin",
				"_kinetic_energy_by_population"
			],
			[
				"it_vel",
				"it_vel_x"
			],
			[
				"_vel",
				"_velocity_x"
			],
			[
				"_ve",
				"_velocity_x"
			],
			[
				"_v",
				"_velocity_x"
			],
			[
				"beg",
				"begin"
			],
			[
				"it",
				"it_vel_x"
			],
			[
				"unit",
				"unit_charge"
			],
			[
				"_accu",
				"_accumulated_velocity_profile"
			],
			[
				"_acc",
				"_velocity_accumulation_interval"
			],
			[
				"_in",
				"_velocity_accumulation_interval"
			],
			[
				"_veloci",
				"_velocity_accumulation_interval"
			],
			[
				"_b",
				"_bin_start"
			],
			[
				"Plasm",
				"PlasmaFields"
			],
			[
				"prev",
				"previous_e_to_acc_factor"
			],
			[
				"e_",
				"e_to_acc_factor"
			],
			[
				"pre",
				"previous_e_to_acc_factor"
			],
			[
				"_ma",
				"_magnetized"
			],
			[
				"_velo",
				"_velocity_x"
			],
			[
				"group",
				"group_size"
			],
			[
				"numb",
				"_number_of_particles"
			],
			[
				"_unit",
				"_unit_mass"
			],
			[
				"popu",
				"population_index"
			],
			[
				"fl",
				"filtered_kernel"
			],
			[
				"charge",
				"charge_array"
			],
			[
				"pot",
				"potential_array"
			],
			[
				"ch",
				"charge_array"
			],
			[
				"_filter",
				"_filter_parameter_1"
			],
			[
				"_fil",
				"_filter_parameter_2"
			],
			[
				"pop",
				"population_size"
			],
			[
				"_s",
				"_number_of_particles"
			],
			[
				"sin",
				"sin_cyclotron"
			],
			[
				"sum_v",
				"sum_v_square"
			],
			[
				"get_",
				"get_mass"
			],
			[
				"acc",
				"acceleration"
			],
			[
				"_mass",
				"_unit_mass"
			],
			[
				"fil",
				"filter_parameter_2"
			],
			[
				"vel",
				"velocity_accumulation_interval"
			],
			[
				"fi",
				"filter_parameter_1"
			],
			[
				"gr",
				"grid_size"
			],
			[
				"ve",
				"velocity_accumulation_interval"
			],
			[
				"nu",
				"number_of_populations"
			],
			[
				"Populat",
				"PopulationOfParticles"
			],
			[
				"_a",
				"_a2"
			],
			[
				"Python",
				"PythonScalarTraits"
			],
			[
				"core",
				"core_periodic_laplace"
			],
			[
				"_",
				"_constructLaplacePotentialOperator"
			],
			[
				"BEMPP_",
				"BEMPP_LIBRARY_FOUND"
			],
			[
				"_D",
				"_D"
			],
			[
				"bk",
				"bk_pnt_min"
			],
			[
				"step",
				"step_inner"
			],
			[
				"gain",
				"_gain_it_max"
			],
			[
				"_g",
				"_gain_it_max"
			]
		]
	},
	"buffers":
	[
		{
			"file": "tools/XGrafixInterface.h",
			"settings":
			{
				"buffer_size": 639,
				"line_ending": "Unix"
			}
		},
		{
			"file": "PlasmaScale.h",
			"settings":
			{
				"buffer_size": 651,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tools/XGrafixInterface.cpp",
			"settings":
			{
				"buffer_size": 799,
				"line_ending": "Unix"
			}
		},
		{
			"file": "PlasmaScale.cpp",
			"settings":
			{
				"buffer_size": 506,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 67.0,
		"selected_items":
		[
			[
				"cmake",
				"Set Syntax: CMake"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/plasma/Simulation.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/plasma/Simulation.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/fields/PlasmaFields.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/fields/PlasmaFields.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/particles/CollectionOfPopulations.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/particles/CollectionOfPopulations.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/plasma/History.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/plasma/History.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/fields/Field.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/fields/Field.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/plasma/Plasma.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/plasma/Plasma.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/particles/PopulationOfParticles.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/particles/PopulationOfParticles.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/plasma/State.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/plasma/State.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/Diagnostic.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/ScatterDiagnostic.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/CurveDiagnostic.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/Diagnostic.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/ScatterDiagnostic.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/CurveDiagnostic.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/Tools.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/RandomTools.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/Tools.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/RandomTools.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/Diagnostics.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/Diagnostics.h",
		"/Users/cazeaux/Dropbox/m2an_sound_lung/m2an_sound_lung_corrected.bbl",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/fields/fields.c",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/PlasmaScale.sublime-project",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/particles/init.c",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/PlasmaScale.cpp",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/PlasmaScale.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/es1.c",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/es1.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/particles/accel.c",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/particles/set.c",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/initwin.c",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/particles/move.c",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/tools/XgrafixTools.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/plasma/PlasmaScale.sublime-project",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/Plasma.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/State.h",
		"/Users/cazeaux/Dropbox/Sauvegardes/Metrolab/MetroOptim/app/MetroOptim/src/Network.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/particles/CollectionOfParticles.h",
		"/Users/cazeaux/Dropbox/Postdocs/Plasma/xes1/src/particles/ParticlePopulation.h",
		"/usr/local/Cellar/cmake/2.8.12.1/share/cmake/Modules/FindOpenMP.cmake",
		"/pool/paradiseo/eo/src/apply.h",
		"/pool/paradiseo/eo/src/utils/eoParallel.cpp",
		"/pool/paradiseo/eo/test/t-eoParallel.cpp",
		"/pool/paradiseo/eo/test/t-openmp.cpp",
		"/pool/bempp/build/contrib/trilinos/packages/kokkos/array/src/KokkosArray_OpenMP.hpp",
		"/pool/bempp/installer/patches/ahmed_omp.patch",
		"/Users/cazeaux/Dropbox/Cemracs/BEM Correctors/periodic_laplace/python/CMakeLists.txt",
		"/pool/bempp/bempp_setup.cfg",
		"/pool/bempp/bempp_setup.py",
		"/pool/bempp/installer/patches/trilinos_find_python_interp.patch",
		"/pool/bempp/installer/patches/Teuchos_LAPACK.hpp.patch",
		"/pool/bempp/installer/patches/Teuchos_LAPACK.cpp.patch",
		"/pool/bempp/installer/patches/tbb_pipeline.patch",
		"/pool/bempp/installer/patches/Epetra_ConfigDefs.h.patch",
		"/pool/bempp/installer/patches/BoostTesting.patch",
		"/pool/bempp/installer/patches/ahmed_ACAn_inext_jnext_ACA.h.patch",
		"/pool/bempp/examples/grid_refinement.cpp",
		"/pool/bempp/installer/py_modules/configuration.py",
		"/pool/bempp/installer/py_modules/trilinos.pyc",
		"/pool/bempp/installer/py_modules/trilinos.py",
		"/pool/bempp/installer/py_modules/tools.pyc",
		"/pool/bempp/installer/py_modules/tools.py",
		"/pool/bempp/installer/py_modules/tbb.pyc",
		"/pool/bempp/installer/py_modules/tbb.py",
		"/pool/bempp/installer/py_modules/swig.pyc",
		"/pool/bempp/installer/py_modules/swig.py",
		"/pool/bempp/installer/py_modules/python_patch.pyc",
		"/pool/bempp/installer/py_modules/python_patch.py",
		"/pool/bempp/installer/py_modules/mkl.pyc",
		"/pool/bempp/installer/py_modules/mkl.py",
		"/pool/bempp/installer/py_modules/dune.pyc",
		"/pool/bempp/installer/py_modules/dune.py",
		"/pool/bempp/installer/py_modules/cmake.pyc",
		"/pool/bempp/installer/py_modules/cmake.py",
		"/pool/bempp/installer/py_modules/boost.pyc",
		"/pool/bempp/installer/py_modules/boost.py",
		"/pool/bempp/installer/py_modules/bempp.pyc",
		"/pool/bempp/installer/py_modules/bempp.py",
		"/pool/bempp/installer/py_modules/armadillo.pyc",
		"/pool/bempp/installer/py_modules/armadillo.py",
		"/pool/bempp/installer/py_modules/ahmed.pyc",
		"/pool/bempp/installer/py_modules/ahmed.py",
		"/pool/bempp/installer/py_modules/__init__.pyc",
		"/pool/bempp/installer/py_modules/__init__.py",
		"/pool/bempp/cmake/BemppConfig.cmake.in",
		"/pool/bempp/cmake/BemppConfigLocation.in",
		"/pool/bempp/lib/CMakeLists.txt",
		"/pool/bempp/python/bempp/CMakeLists.txt",
		"/pool/bempp/doc/misc/CMakeLists.txt.example",
		"/pool/bempp/README",
		"/pool/bempp/bempp_setup.cfg.generated",
		"/pool/bempp/installer/build_scripts/posix/boost_build.sh",
		"/pool/bempp/build/contrib/boost/boost_build.sh",
		"/pool/bempp/test_blas/build/CMakeFiles/test_sdot_returns_double.dir/build.make",
		"/pool/bempp/test_blas/build/CMakeFiles/test_zdotc.dir/build.make",
		"/pool/bempp/test_blas/build/CMakeFiles/test_sdot_returns_float.dir/build.make",
		"/pool/bempp/test_lapack/build/CMakeFiles/test_lapack.dir/build.make",
		"/pool/bempp/test_blas/build/CMakeFiles/test_blas.dir/build.make",
		"/pool/bempp/test_blas/build/CMakeFiles/test_zdotc_g77.dir/build.make",
		"/pool/bempp/test_lapack/build/cmake_install.cmake",
		"/pool/bempp/test_blas/build/cmake_install.cmake",
		"/pool/bempp/test_blas/build/CMakeCache.txt",
		"/pool/bempp/test_lapack/build/CMakeCache.txt",
		"/pool/bempp/test_lapack/build/CMakeFiles/CMakeDirectoryInformation.cmake",
		"/pool/bempp/test_blas/build/CMakeFiles/CMakeDirectoryInformation.cmake",
		"/pool/bempp/test_blas/build/CMakeFiles/CMakeOutput.log",
		"/pool/bempp/test_lapack/build/CMakeFiles/CMakeOutput.log",
		"/pool/bempp/test_blas/build/CMakeFiles/test_zdotc.dir/CXX.includecache",
		"/pool/bempp/test_lapack/build/CMakeFiles/test_lapack.dir/CXX.includecache",
		"/pool/bempp/test_blas/build/CMakeFiles/test_blas.dir/CXX.includecache",
		"/pool/bempp/test_blas/build/CMakeFiles/test_sdot_returns_float.dir/CXX.includecache",
		"/pool/bempp/test_blas/build/CMakeFiles/test_zdotc_g77.dir/CXX.includecache",
		"/pool/bempp/test_blas/build/CMakeFiles/test_sdot_returns_double.dir/CXX.includecache",
		"/pool/bempp/test_blas/build/CMakeFiles/test_sdot_returns_float.dir/depend.internal",
		"/pool/bempp/test_blas/build/CMakeFiles/test_zdotc.dir/depend.internal",
		"/pool/bempp/test_blas/build/CMakeFiles/test_zdotc_g77.dir/depend.internal",
		"/pool/bempp/test_blas/build/CMakeFiles/test_sdot_returns_double.dir/depend.internal",
		"/pool/bempp/test_blas/build/CMakeFiles/test_blas.dir/depend.internal",
		"/pool/bempp/test_lapack/build/CMakeFiles/test_lapack.dir/depend.internal",
		"/pool/bempp/test_blas/build/CMakeFiles/test_zdotc_g77.dir/DependInfo.cmake"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"Power.cpp",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"l",
			"])",
			"_size",
			"get_x_grid_ptr",
			"get_velocity_bin_array_ptr",
			"_max_size_history",
			"_electrostatic_energy_by_mode",
			"Computed",
			"_electrostatic_energy_by_mode",
			"iterator",
			"random",
			"x0",
			"dvb",
			"static_cast<int>",
			"instant_velocity_profile",
			"std::static_cast",
			"bin_size",
			"nbins",
			"bin_number",
			"Weigh_Particle",
			"Reset_Charge",
			"population",
			"_cyclotronic_rotation_parameter",
			"density",
			"number_of_particles",
			"_number_of_particles",
			"nv2",
			"ddx",
			"_grid_size",
			"grid_size",
			"grid°size",
			"cyc",
			"dxdt",
			"Compute()",
			"plasma.",
			"_length",
			"_values",
			"Plasma",
			" endl",
			"PI",
			"diameter",
			"index",
			"*=",
			"*= 1.0",
			"inv_length",
			"it",
			"e0t",
			"dxi",
			"hdxi",
			"eot",
			"li",
			"dxdt",
			"ae",
			"_charge",
			"get_mass",
			"_charge",
			"kk",
			"ng",
			"e_field",
			"phi_k",
			"rho_k",
			"_values",
			"(*",
			"(",
			"(*",
			"_grid_size",
			"_grid_size/2",
			"esem_hist",
			"eses",
			"twothirds",
			"onesix",
			"cub",
			"acub",
			"sqr",
			"get_values_x",
			"sqr",
			"acub",
			"twothirds",
			"onesix",
			"cub",
			"hdx",
			"ecconst",
			"ae",
			"dxdt",
			"ecconst",
			"HISTMAX",
			"HISTMAXX",
			"x_array",
			"setv",
			"argv",
			"argc",
			"Start",
			"flag",
			"tbb",
			"boost",
			"doc",
			"bempp",
			"prefix+\"/bempp",
			"prefix+\"/bempp\"",
			"prefix+\"/bempp",
			"bempp",
			"belpp",
			"beloo$",
			"bempp",
			"/bempp",
			"Main_prefix/bempp",
			"/bempp",
			"bempp/include",
			"bempp/lib",
			"BIP",
			"exactFunction",
			"testGridFunction",
			"Fiber::Function<ValueType>&",
			"KernelFunctor",
			"KernelFunctorFromTestFunction",
			"addGeometricalDependencies",
			"integral",
			"L2NormOfDifference",
			"testGridFunction",
			"Fiber::Function<ResultType>& testGridFunction",
			"gridFunction",
			"refFunction",
			"gridFunction",
			"KernelFunctorFromUnaryFunction",
			"L2NormOfDifference",
			"L2NormOfDifferenceIntegrandFunctor",
			"localCoefficients",
			"gridFunction"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"_max_size",
			"partial_velocity_profile",
			"_number_of_bins",
			"population_density",
			"population_size",
			"_population_size",
			"_dx/_dt",
			"plasma->",
			"plasma",
			" std::endl",
			"bin",
			"get_unit_mass",
			"sym_k",
			"phi",
			"rho",
			"half_grid_size",
			"prefix+\"",
			"prefix",
			"Main_prefix",
			"include",
			"lib",
			"testFunction",
			"integrand",
			"Integrator",
			"GridFunction<BasisFunctionType, ResultType>& testGridFunction",
			"trialGridFunction",
			"testGridFunction",
			"trialGridFunction",
			"KernelFunctorFromTestFunction",
			"IntegrandFunctor",
			"_D"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "tools/XGrafixInterface.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 639,
						"regions":
						{
						},
						"selection":
						[
							[
								529,
								529
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "PlasmaScale.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 651,
						"regions":
						{
						},
						"selection":
						[
							[
								629,
								629
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "tools/XGrafixInterface.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 799,
						"regions":
						{
						},
						"selection":
						[
							[
								122,
								122
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "PlasmaScale.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 506,
						"regions":
						{
						},
						"selection":
						[
							[
								151,
								151
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				0,
				1,
				1,
				2
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.940089233981,
			1.0
		],
		"rows":
		[
			0.0,
			0.464431426107,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "PlasmaScale.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"po",
				"test/MOPT/t-Power.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 62.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
